"""
ü§ñ TelegramBotInstance - –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã–º Telegram –±–æ—Ç–æ–º
–ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –æ–¥–Ω–∏–º –±–æ—Ç–æ–º –∫–ª–∏–µ–Ω—Ç–∞
"""

import logging
from typing import Optional
from telegram import Bot
from telegram.ext import Application, CommandHandler, MessageHandler, filters

logger = logging.getLogger(__name__)

class TelegramBotInstance:
    """–≠–∫–∑–µ–º–ø–ª—è—Ä –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ Telegram –±–æ—Ç–∞"""
    
    def __init__(self, bot_token: str, shop_id: int, handlers):
        self.bot_token = bot_token
        self.shop_id = shop_id
        self.handlers = handlers
        self.bot: Optional[Bot] = None
        self.application: Optional[Application] = None
        self.bot_username: Optional[str] = None
        self.is_running = False
        
        logger.info(f"ü§ñ –°–æ–∑–¥–∞–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ {shop_id}")
    
    async def start(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
        try:
            # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
            self.bot = Bot(token=self.bot_token)
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
            bot_info = await self.bot.get_me()
            self.bot_username = bot_info.username
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            self.application = Application.builder().token(self.bot_token).build()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
            self.application.add_handler(
                CommandHandler("start", self._handle_start)
            )
            self.application.add_handler(
                MessageHandler(filters.TEXT & ~filters.COMMAND, self._handle_message)
            )
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            await self.application.initialize()
            await self.application.start()
            await self.application.updater.start_polling()
            
            self.is_running = True
            logger.info(f"‚úÖ –ë–æ—Ç @{self.bot_username} (–º–∞–≥–∞–∑–∏–Ω {self.shop_id}) –∑–∞–ø—É—â–µ–Ω")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ {self.shop_id}: {e}")
            raise
    
    async def stop(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞"""
        try:
            if self.application and self.is_running:
                await self.application.updater.stop()
                await self.application.stop()
                await self.application.shutdown()
            
            self.is_running = False
            logger.info(f"üõë –ë–æ—Ç @{self.bot_username} (–º–∞–≥–∞–∑–∏–Ω {self.shop_id}) –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ {self.shop_id}: {e}")
            raise
    
    async def _handle_start(self, update, context):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        try:
            await self.handlers.handle_start(update, context, self.shop_id)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ /start –¥–ª—è –±–æ—Ç–∞ {self.shop_id}: {e}")
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    async def _handle_message(self, update, context):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            await self.handlers.handle_message(update, context, self.shop_id)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞ {self.shop_id}: {e}")
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    async def send_message(self, chat_id: int, text: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞"""
        try:
            if self.bot:
                await self.bot.send_message(chat_id=chat_id, text=text)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º {self.shop_id}: {e}")
            raise
    
    def get_status(self) -> dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
        return {
            "shop_id": self.shop_id,
            "bot_username": self.bot_username,
            "is_running": self.is_running,
            "bot_token": self.bot_token[:8] + "..." if self.bot_token else None
        } 