"""
üéØ BotHandlers - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –±–æ—Ç–æ–≤
–û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ /start, —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –¥—Ä—É–≥–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
"""

import logging
from datetime import datetime
from typing import TYPE_CHECKING
from telegram import Update
from telegram.ext import ContextTypes

if TYPE_CHECKING:
    from .manager import BotManager

logger = logging.getLogger(__name__)

class BotHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—Å–µ—Ö –±–æ—Ç–æ–≤"""
    
    def __init__(self, bot_manager: 'BotManager'):
        self.bot_manager = bot_manager
        self.bot_database = bot_manager.bot_database
        
        logger.info("üéØ BotHandlers –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    
    async def handle_start(self, update: Update, context: ContextTypes.DEFAULT_TYPE, shop_id: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
        try:
            user = update.effective_user
            
            logger.info(f"üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} (@{user.username}) –Ω–∞—á–∞–ª –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º –º–∞–≥–∞–∑–∏–Ω–∞ {shop_id}")
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É bot_subscribers
            await self.bot_database.create_or_update_subscriber(
                shop_id=shop_id,
                telegram_user_id=str(user.id),
                username=user.username,
                first_name=user.first_name,
                last_name=user.last_name,
                language_code=user.language_code
            )
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–≥–∞–∑–∏–Ω–µ
            shop_info = await self.bot_database.get_shop_info(shop_id)
            shop_name = shop_info.get('name', '–ú–∞–≥–∞–∑–∏–Ω') if shop_info else '–ú–∞–≥–∞–∑–∏–Ω'
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            welcome_message = f"""
üõçÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {shop_name}!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º:
‚Ä¢ üì± –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ üõí –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑
‚Ä¢ üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
/catalog - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
/contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
/help - –ü–æ–º–æ—â—å
            """
            
            await update.message.reply_text(welcome_message.strip())
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ /start –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ {shop_id}: {e}")
            await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–æ –º—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ—ë –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.")
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE, shop_id: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            user = update.effective_user
            message_text = update.message.text
            
            logger.info(f"üí¨ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} (@{user.username}) –Ω–∞–ø–∏—Å–∞–ª –±–æ—Ç—É –º–∞–≥–∞–∑–∏–Ω–∞ {shop_id}: {message_text}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
            await self.bot_database.update_subscriber_interaction(
                shop_id=shop_id,
                telegram_user_id=str(user.id)
            )
            
            # –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
            message_lower = message_text.lower()
            
            if any(word in message_lower for word in ['–∫–∞—Ç–∞–ª–æ–≥', '—Ç–æ–≤–∞—Ä—ã', '—á—Ç–æ –µ—Å—Ç—å', 'catalog']):
                await self._handle_catalog_request(update, shop_id)
            elif any(word in message_lower for word in ['–∫–æ–Ω—Ç–∞–∫—Ç', '—Å–≤—è–∑–∞—Ç—å—Å—è', '–º–µ–Ω–µ–¥–∂–µ—Ä', 'contact']):
                await self._handle_contact_request(update, shop_id)
            elif any(word in message_lower for word in ['–ø–æ–º–æ—â—å', 'help', '—á—Ç–æ –¥–µ–ª–∞—Ç—å']):
                await self._handle_help_request(update, shop_id)
            else:
                # –û–±—â–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                await update.message.reply_text(
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! üòä\n\n"
                    "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–∞–º–∏:\n"
                    "/catalog - –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤\n"
                    "/contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏\n"
                    "/help - –ü–æ–º–æ—â—å"
                )
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ {shop_id}: {e}")
            await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–≥–æ –∏ —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏–º.")
    
    async def _handle_catalog_request(self, update: Update, shop_id: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫–∞—Ç–∞–ª–æ–≥–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            products = await self.bot_database.get_shop_products(shop_id)
            
            if not products:
                await update.message.reply_text(
                    "üì¶ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –ø—É—Å—Ç.\n\n"
                    "–ú—ã –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ–≥–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º!\n"
                    "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: /contact"
                )
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–∞–º–∏
            catalog_text = "üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤:\n\n"
            
            for product in products[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Ç–æ–≤–∞—Ä–æ–≤
                catalog_text += f"üì± {product['name']}\n"
                if product['price']:
                    catalog_text += f"üí∞ –¶–µ–Ω–∞: {product['price']} —Ä—É–±.\n"
                if product['description']:
                    catalog_text += f"üìù {product['description'][:100]}...\n"
                catalog_text += "\n"
            
            if len(products) > 10:
                catalog_text += f"... –∏ –µ—â—ë {len(products) - 10} —Ç–æ–≤–∞—Ä–æ–≤\n\n"
            
            catalog_text += "üìû –î–ª—è –∑–∞–∫–∞–∑–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: /contact"
            
            await update.message.reply_text(catalog_text)
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ {shop_id}: {e}")
            await update.message.reply_text("–ö–∞—Ç–∞–ª–æ–≥ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    async def _handle_contact_request(self, update: Update, shop_id: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
        try:
            shop_info = await self.bot_database.get_shop_info(shop_id)
            
            contact_text = "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n\n"
            
            if shop_info:
                contact_text += f"üè™ {shop_info.get('name', '–ù–∞—à –º–∞–≥–∞–∑–∏–Ω')}\n\n"
                
                if shop_info.get('description'):
                    contact_text += f"üìù {shop_info['description']}\n\n"
            
            contact_text += "‚úâÔ∏è –î–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:\n"
            contact_text += "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –ø—Ä—è–º–æ –∑–¥–µ—Å—å\n"
            contact_text += "‚Ä¢ –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è\n\n"
            contact_text += "‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –ø–Ω-–ø—Ç 9:00-18:00"
            
            await update.message.reply_text(contact_text)
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ {shop_id}: {e}")
            await update.message.reply_text("–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
    
    async def _handle_help_request(self, update: Update, shop_id: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–º–æ—â–∏"""
        help_text = """
ü§ñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:

üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/catalog - –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
/contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üí¨ –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ:
‚Ä¢ –ü–∏—Å–∞—Ç—å –Ω–∞–º –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –ó–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–æ–≤–∞—Ä–∞—Ö
‚Ä¢ –û—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã

üìû –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ü–∏—à–∏—Ç–µ –Ω–∞–º!
        """
        
        await update.message.reply_text(help_text.strip()) 