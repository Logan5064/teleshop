#!/usr/bin/env python3
"""
üìä –°—Ö–µ–º—ã –¥–ª—è API –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –±–æ—Ç–æ–≤
"""

from pydantic import BaseModel
from typing import Optional, List, Dict, Any
from datetime import datetime

# ===== –°–•–ï–ú–´ –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ë–û–¢–û–í =====

class BotUserCreate(BaseModel):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞"""
    telegram_id: str
    username: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    language_code: Optional[str] = None

class BotUserResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞"""
    id: int
    shop_id: int
    telegram_id: str
    username: Optional[str]
    first_name: Optional[str]
    last_name: Optional[str]
    language_code: Optional[str]
    first_seen: datetime
    last_seen: datetime
    total_sessions: int
    total_messages: int
    is_blocked: bool
    
    class Config:
        from_attributes = True

# ===== –°–•–ï–ú–´ –î–õ–Ø –°–ï–°–°–ò–ô =====

class BotSessionCreate(BaseModel):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏"""
    user_telegram_id: str
    ip_address: Optional[str] = None
    user_agent: Optional[str] = None
    device_type: Optional[str] = None

class BotSessionUpdate(BaseModel):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ (–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ)"""
    ended_at: Optional[datetime] = None
    duration_seconds: Optional[int] = None
    messages_count: Optional[int] = None
    commands_used: Optional[List[str]] = None
    pages_visited: Optional[List[str]] = None

class BotSessionResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–µ—Å—Å–∏–∏"""
    id: int
    user_id: int
    shop_id: int
    started_at: datetime
    ended_at: Optional[datetime]
    duration_seconds: int
    ip_address: Optional[str]
    country: Optional[str]
    country_code: Optional[str]
    city: Optional[str]
    device_type: Optional[str]
    messages_count: int
    
    class Config:
        from_attributes = True

# ===== –°–•–ï–ú–´ –î–õ–Ø –ê–ö–¢–ò–í–ù–û–°–¢–ò =====

class BotActivityCreate(BaseModel):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    user_telegram_id: str
    session_id: Optional[int] = None
    event_type: str  # message, command, button_click, etc.
    event_data: Optional[Dict[str, Any]] = None
    command: Optional[str] = None
    message_text: Optional[str] = None
    button_data: Optional[str] = None

class BotActivityResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    id: int
    user_id: int
    session_id: int
    shop_id: int
    timestamp: datetime
    event_type: str
    command: Optional[str]
    message_text: Optional[str]
    
    class Config:
        from_attributes = True

# ===== –ê–ù–ê–õ–ò–¢–ò–ö–ê =====

class CountryStats(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ"""
    country: str
    country_code: str
    users_count: int
    percentage: float

class HourlyStats(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —á–∞—Å–∞–º"""
    hour: int
    users_count: int
    messages_count: int

class DailyStats(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–Ω—è–º"""
    date: str
    users_count: int
    new_users: int
    messages_count: int
    sessions_count: int

class TopUser(BaseModel):
    """–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    telegram_id: str
    username: Optional[str]
    first_name: Optional[str]
    messages_count: int
    sessions_count: int
    last_seen: datetime

class ShopAnalyticsResponse(BaseModel):
    """–ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_users: int
    active_users_today: int
    active_users_week: int
    active_users_month: int
    total_sessions: int
    total_messages: int
    average_session_duration: float
    
    # –ì–µ–æ–≥—Ä–∞—Ñ–∏—è
    top_countries: List[CountryStats]
    
    # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    hourly_stats: List[HourlyStats]
    daily_stats: List[DailyStats]
    
    # –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    top_users: List[TopUser]
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    updated_at: datetime

class AnalyticsFilter(BaseModel):
    """–§–∏–ª—å—Ç—Ä—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    date_from: Optional[datetime] = None
    date_to: Optional[datetime] = None
    country: Optional[str] = None
    limit: Optional[int] = 100

# ===== –ë–´–°–¢–†–´–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò =====

class QuickStats(BaseModel):
    """–ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞"""
    users_online_now: int
    users_today: int
    messages_today: int
    new_users_today: int
    top_country: Optional[str]
    growth_percentage: float  # –†–æ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—á–µ—Ä–∞ 