#!/usr/bin/env python3
"""
üìä –ú–æ–¥–µ–ª–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–æ—Ç–æ–≤
–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
"""

from sqlalchemy import Column, Integer, String, DateTime, Boolean, Text, ForeignKey, Float
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from datetime import datetime

Base = declarative_base()

class BotUser(Base):
    """üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–æ–≤ (–ø–æ–∫—É–ø–∞—Ç–µ–ª–∏)"""
    __tablename__ = "bot_users"
    
    id = Column(Integer, primary_key=True, index=True)
    
    # –°–≤—è–∑—å —Å –º–∞–≥–∞–∑–∏–Ω–æ–º (—á–µ–π —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    shop_id = Column(Integer, ForeignKey("shops.id"), nullable=False)
    
    # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
    telegram_id = Column(String(50), nullable=False, index=True)  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
    username = Column(String(100), nullable=True, index=True)     # @username
    first_name = Column(String(100), nullable=True)              # –ò–º—è
    last_name = Column(String(100), nullable=True)               # –§–∞–º–∏–ª–∏—è
    language_code = Column(String(10), nullable=True)            # –Ø–∑—ã–∫ (ru, en, etc.)
    
    # –ü–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç
    first_seen = Column(DateTime, default=datetime.utcnow, nullable=False)
    last_seen = Column(DateTime, default=datetime.utcnow, nullable=False)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_sessions = Column(Integer, default=1, nullable=False)   # –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∑–∞—Ö–æ–¥–∏–ª
    total_messages = Column(Integer, default=0, nullable=False)   # –°–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–∏–ª
    is_blocked = Column(Boolean, default=False, nullable=False)   # –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ª–∏ –±–æ—Ç–∞
    
    # –°–≤—è–∑–∏
    sessions = relationship("BotSession", back_populates="user")
    
    def __repr__(self):
        return f"<BotUser {self.telegram_id} @{self.username}>"


class BotSession(Base):
    """üì± –°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ"""
    __tablename__ = "bot_sessions"
    
    id = Column(Integer, primary_key=True, index=True)
    
    # –°–≤—è–∑–∏
    user_id = Column(Integer, ForeignKey("bot_users.id"), nullable=False)
    shop_id = Column(Integer, ForeignKey("shops.id"), nullable=False)
    
    # –î–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    started_at = Column(DateTime, default=datetime.utcnow, nullable=False)
    ended_at = Column(DateTime, nullable=True)
    duration_seconds = Column(Integer, default=0, nullable=False)
    
    # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    ip_address = Column(String(45), nullable=True)               # IPv4/IPv6
    user_agent = Column(Text, nullable=True)                     # User-Agent –±—Ä–∞—É–∑–µ—Ä–∞
    device_type = Column(String(20), nullable=True)              # mobile, desktop, tablet
    
    # –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
    country = Column(String(100), nullable=True)                 # –°—Ç—Ä–∞–Ω–∞
    country_code = Column(String(3), nullable=True)              # RU, US, DE
    city = Column(String(100), nullable=True)                    # –ì–æ—Ä–æ–¥
    latitude = Column(Float, nullable=True)                      # –®–∏—Ä–æ—Ç–∞
    longitude = Column(Float, nullable=True)                     # –î–æ–ª–≥–æ—Ç–∞
    
    # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Å–µ—Å—Å–∏–∏
    messages_count = Column(Integer, default=0, nullable=False)  # –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏
    commands_used = Column(Text, nullable=True)                  # JSON —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    pages_visited = Column(Text, nullable=True)                  # JSON —Å—Ç—Ä–∞–Ω–∏—Ü
    
    # –°–≤—è–∑–∏
    user = relationship("BotUser", back_populates="sessions")
    
    def __repr__(self):
        return f"<BotSession {self.user_id} from {self.country}>"


class BotActivity(Base):
    """üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–æ—Ç–µ"""
    __tablename__ = "bot_activity"
    
    id = Column(Integer, primary_key=True, index=True)
    
    # –°–≤—è–∑–∏
    user_id = Column(Integer, ForeignKey("bot_users.id"), nullable=False)
    session_id = Column(Integer, ForeignKey("bot_sessions.id"), nullable=False)
    shop_id = Column(Integer, ForeignKey("shops.id"), nullable=False)
    
    # –°–æ–±—ã—Ç–∏–µ
    timestamp = Column(DateTime, default=datetime.utcnow, nullable=False)
    event_type = Column(String(50), nullable=False)              # message, command, button_click, etc.
    event_data = Column(Text, nullable=True)                     # JSON —Å –¥–µ—Ç–∞–ª—è–º–∏ —Å–æ–±—ã—Ç–∏—è
    
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç
    command = Column(String(100), nullable=True)                 # –ö–æ–º–∞–Ω–¥–∞ (/start, /help)
    message_text = Column(Text, nullable=True)                   # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    button_data = Column(String(200), nullable=True)             # –î–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    
    def __repr__(self):
        return f"<BotActivity {self.event_type} at {self.timestamp}>"


class ShopAnalytics(Base):
    """üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞ (—Å–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)"""
    __tablename__ = "shop_analytics"
    
    id = Column(Integer, primary_key=True, index=True)
    
    # –°–≤—è–∑—å —Å –º–∞–≥–∞–∑–∏–Ω–æ–º
    shop_id = Column(Integer, ForeignKey("shops.id"), nullable=False, unique=True)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    total_users = Column(Integer, default=0, nullable=False)      # –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    active_users_today = Column(Integer, default=0, nullable=False)
    active_users_week = Column(Integer, default=0, nullable=False)
    active_users_month = Column(Integer, default=0, nullable=False)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–π
    total_sessions = Column(Integer, default=0, nullable=False)
    average_session_duration = Column(Float, default=0.0, nullable=False)  # –í –º–∏–Ω—É—Ç–∞—Ö
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    total_messages = Column(Integer, default=0, nullable=False)
    messages_today = Column(Integer, default=0, nullable=False)
    
    # –ì–µ–æ–≥—Ä–∞—Ñ–∏—è
    top_countries = Column(Text, nullable=True)                   # JSON —Ç–æ–ø —Å—Ç—Ä–∞–Ω
    top_cities = Column(Text, nullable=True)                     # JSON —Ç–æ–ø –≥–æ—Ä–æ–¥–æ–≤
    
    # –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    updated_at = Column(DateTime, default=datetime.utcnow, nullable=False)
    
    def __repr__(self):
        return f"<ShopAnalytics shop_id={self.shop_id}, users={self.total_users}>" 