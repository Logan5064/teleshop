#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üöÄ SIMPLE TeleShop Constructor Launcher
–ü—Ä–æ—Å—Ç—ã–µ —è—Ä–ª—ã–∫–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö
"""

import tkinter as tk
from tkinter import ttk, messagebox
import subprocess
import socket
import sys
import os
from pathlib import Path

class SimpleLauncher:
    def __init__(self, root):
        self.root = root
        self.root.title("üöÄ SIMPLE TeleShop Constructor Launcher")
        self.root.geometry("800x600")
        self.root.configure(bg='#f0f0f0')
        
        self.local_ip = self.get_local_ip()
        self.setup_ui()
        
    def get_local_ip(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ IP –∞–¥—Ä–µ—Å–∞"""
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
            s.connect(("8.8.8.8", 80))
            ip = s.getsockname()[0]
            s.close()
            return ip
        except:
            return "127.0.0.1"
        
    def setup_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
        main_frame = ttk.Frame(self.root, padding="20")
        main_frame.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ttk.Label(main_frame, text="üöÄ SIMPLE TeleShop Constructor", 
                               font=('Arial', 24, 'bold'), foreground='green')
        title_label.grid(row=0, column=0, columnspan=2, pady=(0, 30))
        
        # IP –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        ip_label = ttk.Label(main_frame, text=f"üåê –í–∞—à IP: {self.local_ip}", 
                            font=('Arial', 14, 'bold'), foreground='blue')
        ip_label.grid(row=1, column=0, columnspan=2, pady=(0, 20))
        
        # –Ø–†–õ–´–ö–ò –°–ï–†–í–ò–°–û–í
        services_frame = ttk.LabelFrame(main_frame, text="üéÆ –ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–û–í", padding="20")
        services_frame.grid(row=2, column=0, columnspan=2, sticky=(tk.W, tk.E), pady=20)
        
        # –ö–Ω–æ–ø–∫–∞ 1: Backend
        ttk.Button(services_frame, text="üîß –ó–ê–ü–£–°–¢–ò–¢–¨ BACKEND\n(FastAPI + PostgreSQL)", 
                  command=self.launch_backend, 
                  style='Custom.TButton').grid(row=0, column=0, padx=10, pady=10, ipadx=30, ipady=20)
        
        # –ö–Ω–æ–ø–∫–∞ 2: Auth Bot
        ttk.Button(services_frame, text="ü§ñ –ó–ê–ü–£–°–¢–ò–¢–¨ AUTH BOT\n(Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)", 
                  command=self.launch_auth_bot, 
                  style='Custom.TButton').grid(row=0, column=1, padx=10, pady=10, ipadx=30, ipady=20)
        
        # –ö–Ω–æ–ø–∫–∞ 3: Frontend
        ttk.Button(services_frame, text="üé® –ó–ê–ü–£–°–¢–ò–¢–¨ FRONTEND\n(Next.js –∞–¥–º–∏–Ω–∫–∞)", 
                  command=self.launch_frontend, 
                  style='Custom.TButton').grid(row=1, column=0, padx=10, pady=10, ipadx=30, ipady=20)
        
        # –ö–Ω–æ–ø–∫–∞ 4: LocalTunnel
        ttk.Button(services_frame, text="üåê –ó–ê–ü–£–°–¢–ò–¢–¨ TUNNEL\n(–í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø)", 
                  command=self.launch_tunnel, 
                  style='Custom.TButton').grid(row=1, column=1, padx=10, pady=10, ipadx=30, ipady=20)
        
        # –ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò
        links_frame = ttk.LabelFrame(main_frame, text="üîó –ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò", padding="15")
        links_frame.grid(row=3, column=0, columnspan=2, sticky=(tk.W, tk.E), pady=20)
        
        # –°—Å—ã–ª–∫–∏
        ttk.Button(links_frame, text=f"üè† –ê–¥–º–∏–Ω–∫–∞: http://localhost:3000", 
                  command=lambda: self.open_url("http://localhost:3000")).grid(row=0, column=0, padx=10, pady=5)
        
        ttk.Button(links_frame, text=f"üìñ API: http://localhost:8000/docs", 
                  command=lambda: self.open_url("http://localhost:8000/docs")).grid(row=0, column=1, padx=10, pady=5)
        
        ttk.Button(links_frame, text=f"üåê –°–µ—Ç—å: http://{self.local_ip}:3000", 
                  command=lambda: self.open_url(f"http://{self.local_ip}:3000")).grid(row=1, column=0, padx=10, pady=5)
        
        ttk.Button(links_frame, text="üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å IP URL", 
                  command=self.copy_ip_url).grid(row=1, column=1, padx=10, pady=5)
        
        # –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø
        actions_frame = ttk.LabelFrame(main_frame, text="‚ö° –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø", padding="15")
        actions_frame.grid(row=4, column=0, columnspan=2, sticky=(tk.W, tk.E), pady=20)
        
        ttk.Button(actions_frame, text="üöÄ –ó–ê–ü–£–°–¢–ò–¢–¨ –í–°–ï –°–ï–†–í–ò–°–´", 
                  command=self.launch_all, 
                  style='Accent.TButton').grid(row=0, column=0, padx=10, pady=10, ipadx=20)
        
        ttk.Button(actions_frame, text="üß™ –¢–ï–°–¢ API", 
                  command=self.test_api).grid(row=0, column=1, padx=10, pady=10, ipadx=20)
        
        ttk.Button(actions_frame, text="üìÅ –û–¢–ö–†–´–¢–¨ –ü–ê–ü–ö–£", 
                  command=self.open_folder).grid(row=0, column=2, padx=10, pady=10, ipadx=20)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—Ç—è–∂–µ–Ω–∏—è
        self.root.columnconfigure(0, weight=1)
        self.root.rowconfigure(0, weight=1)
        main_frame.columnconfigure(0, weight=1)
        main_frame.columnconfigure(1, weight=1)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∫–∏
        for i in range(2):
            services_frame.columnconfigure(i, weight=1)
            links_frame.columnconfigure(i, weight=1)
        for i in range(3):
            actions_frame.columnconfigure(i, weight=1)
        
        # –°—Ç–∏–ª—å –∫–Ω–æ–ø–æ–∫
        style = ttk.Style()
        style.configure('Custom.TButton', font=('Arial', 11, 'bold'))
        style.configure('Accent.TButton', font=('Arial', 12, 'bold'))
        
    def launch_backend(self):
        """–Ø–†–õ–´–ö: –ó–∞–ø—É—Å–∫ Backend –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ"""
        try:
            backend_path = Path(__file__).parent / "backend"
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è PowerShell
            subprocess.Popen([
                'powershell.exe', 
                '-Command', 
                f'Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd \'{backend_path}\'; python main_secure.py"'
            ])
            
            messagebox.showinfo("‚úÖ Backend", "Backend –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!\n–ü–æ—Ä—Ç: 8000")
            
        except Exception as e:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Backend:\n{e}")
            
    def launch_auth_bot(self):
        """–Ø–†–õ–´–ö: –ó–∞–ø—É—Å–∫ Auth Bot –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ"""
        try:
            backend_path = Path(__file__).parent / "backend"
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–±–æ—á–∏–π auth_bot.py
            subprocess.Popen([
                'powershell.exe', 
                '-Command', 
                f'Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd \'{backend_path}\'; python auth_bot.py"'
            ])
            
            messagebox.showinfo("‚úÖ Auth Bot", "Auth Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!\n–¢–æ–∫–µ–Ω: 7503005367:AAF2rrpRUr0TXSKWJZsnlPwtuU-RidYLYos")
            
        except Exception as e:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Auth Bot:\n{e}")
            
    def launch_frontend(self):
        """–Ø–†–õ–´–ö: –ó–∞–ø—É—Å–∫ Frontend –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ"""
        try:
            frontend_path = Path(__file__).parent / "frontend" / "teleshop-admin"
            
            if not frontend_path.exists():
                messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", "–ü–∞–ø–∫–∞ frontend/teleshop-admin –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                return
            
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è PowerShell
            subprocess.Popen([
                'powershell.exe', 
                '-Command', 
                f'Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd \'{frontend_path}\'; npm run dev"'
            ])
            
            messagebox.showinfo("‚úÖ Frontend", "Frontend –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!\n–ü–æ—Ä—Ç: 3000")
            
        except Exception as e:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Frontend:\n{e}")
            
    def launch_tunnel(self):
        """–Ø–†–õ–´–ö: –ó–∞–ø—É—Å–∫ LocalTunnel –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ"""
        try:
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è PowerShell
            subprocess.Popen([
                'powershell.exe', 
                '-Command', 
                'Start-Process powershell -ArgumentList "-NoExit", "-Command", "lt --port 3000"'
            ])
            
            messagebox.showinfo("‚úÖ LocalTunnel", "LocalTunnel –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!\n–ü–æ—Ä—Ç: 3000")
            
        except Exception as e:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å LocalTunnel:\n{e}")
            
    def launch_all(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
        self.launch_backend()
        self.launch_auth_bot()
        self.launch_frontend()
        self.launch_tunnel()
        
        messagebox.showinfo("üöÄ –ó–∞–ø—É—Å–∫", "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö!\n\n–ü–æ–¥–æ–∂–¥–∏—Ç–µ 10-15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.")
        
    def test_api(self):
        """–¢–µ—Å—Ç API"""
        try:
            subprocess.Popen([sys.executable, "final_test.py"], shell=True)
            messagebox.showinfo("üß™ –¢–µ—Å—Ç", "–¢–µ—Å—Ç API –∑–∞–ø—É—â–µ–Ω!\n–°–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏.")
        except Exception as e:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç:\n{e}")
            
    def open_folder(self):
        """–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞"""
        try:
            project_path = Path(__file__).parent
            subprocess.Popen(f'explorer "{project_path}"')
        except Exception as e:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É:\n{e}")
            
    def copy_ip_url(self):
        """–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ IP URL"""
        ip_url = f"http://{self.local_ip}:3000"
        self.root.clipboard_clear()
        self.root.clipboard_append(ip_url)
        messagebox.showinfo("üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ", f"IP URL —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω:\n{ip_url}")
        
    def open_url(self, url):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
        import webbrowser
        webbrowser.open(url)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    root = tk.Tk()
    app = SimpleLauncher(root)
    
    root.mainloop()

if __name__ == "__main__":
    main() 