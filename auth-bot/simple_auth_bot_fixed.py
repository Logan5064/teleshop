#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import logging
import asyncio
import asyncpg
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "7503005367:AAF2rrpRUr0TXSKWJZsnlPwtuU-RidYLYos"
WEB_APP_URL = "http://77.73.232.46:3000"

# PostgreSQL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DB_CONFIG = {
    'host': 'ladixoofilad.beget.app',
    'port': 5432,
    'database': 'default_db', 
    'user': 'cloud_user',
    'password': 'u61e&ke&!Ty1'
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –±–æ—Ç–∞"""
    user = update.effective_user
    
    logger.info(f"üöÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} ({user.id}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        conn = await asyncpg.connect(**DB_CONFIG)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
        user_exists = await conn.fetchval(
            "SELECT COUNT(*) FROM users WHERE telegram_id = $1", 
            str(user.id)
        )
        
        if not user_exists:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await conn.execute("""
                INSERT INTO users (telegram_id, username, first_name, last_name, is_active, created_at)
                VALUES ($1, $2, $3, $4, true, NOW())
                ON CONFLICT (telegram_id) DO NOTHING
            """, str(user.id), user.username or '', user.first_name or '', user.last_name or '')
            
            logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name}")
        
        await conn.close()
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –µ—Å–ª–∏ –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
    
    # –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É
    keyboard = [
        [InlineKeyboardButton("üöÄ –û—Ç–∫—Ä—ã—Ç—å TeleShop Admin", url=WEB_APP_URL)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TeleShop, {user.first_name}!

üõçÔ∏è –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã –¥–ª—è Telegram
üé® –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä drag & drop  
üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ–¥–∞–∂–∏
üí∞ –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ –ø–ª–∞—Ç–µ–∂–∏

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:
"""
    
    await update.message.reply_text(
        welcome_text,
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = """
üìã <b>–ö–æ–º–∞–Ω–¥—ã TeleShop Bot:</b>

/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

üîó <b>–°—Å—ã–ª–∫–∏:</b>
‚Ä¢ –ê–¥–º–∏–Ω–∫–∞: http://77.73.232.46:3000
‚Ä¢ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: http://77.73.232.46:3001
‚Ä¢ API: http://77.73.232.46:8000

‚ùì <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @support
"""
    
    await update.message.reply_text(help_text, parse_mode='HTML')

async def status_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        conn = await asyncpg.connect(**DB_CONFIG)
        db_status = "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞"
        await conn.close()
    except:
        db_status = "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    
    status_text = f"""
üìä <b>–°—Ç–∞—Ç—É—Å TeleShop:</b>

ü§ñ –ë–æ—Ç: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç  
üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_status}
üåê –ê–¥–º–∏–Ω–∫–∞: http://77.73.232.46:3000
üé® –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: http://77.73.232.46:3001

–û–±–Ω–æ–≤–ª–µ–Ω–æ: {asyncio.get_event_loop().time()}
"""
    
    await update.message.reply_text(status_text, parse_mode='HTML')

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("ü§ñ –ó–∞–ø—É—Å–∫ TeleShop Auth Bot (Production)")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(BOT_TOKEN).build()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("status", status_command))
        
        logger.info("‚úÖ TeleShop Auth Bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling(allowed_updates=Update.ALL_TYPES)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

if __name__ == '__main__':
    main() 