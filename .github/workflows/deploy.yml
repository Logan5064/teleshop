name: 🚀 Deploy TeleShop to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔑 Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 178.236.17.93
        username: root
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          echo "🎯 Starting TeleShop deployment..."
          
          # Переходим в рабочую папку или клонируем репозиторий
          if [ ! -d "/opt/teleshop" ]; then
            cd /opt
            git clone https://github.com/GTXFerrari/sitetest.git teleshop
          else
            cd /opt/teleshop
            git pull origin main
          fi
          
          cd /opt/teleshop
          
          # Обновляем систему и устанавливаем зависимости
          apt-get update
          
          # Устанавливаем Node.js 18+ если еще не установлен
          if ! command -v node &> /dev/null || [[ $(node -v | cut -d'v' -f2 | cut -d'.' -f1) -lt 18 ]]; then
            echo "📦 Installing Node.js 18..."
            curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
            apt-get install -y nodejs
          fi
          
          # Устанавливаем Python 3.11+ если еще не установлен
          if ! command -v python3.11 &> /dev/null; then
            echo "🐍 Installing Python 3.11..."
            apt-get install -y software-properties-common
            add-apt-repository ppa:deadsnakes/ppa -y
            apt-get update
            apt-get install -y python3.11 python3.11-venv python3.11-dev python3-pip
            ln -sf /usr/bin/python3.11 /usr/bin/python3
          fi
          
          # Устанавливаем PM2 если еще не установлен
          if ! command -v pm2 &> /dev/null; then
            echo "⚡ Installing PM2..."
            npm install -g pm2
          fi
          
          # Устанавливаем PostgreSQL клиент
          apt-get install -y postgresql-client
          
          echo "✅ System dependencies installed"
          
          # Настройка Backend
          echo "🐍 Setting up Python backend..."
          cd /opt/teleshop/05-server-launchers/main
          
          # Создаем виртуальное окружение
          python3.11 -m venv venv
          source venv/bin/activate
          
          # Устанавливаем зависимости
          pip install --upgrade pip
          pip install -r requirements.txt
          
          echo "✅ Backend ready"
          
          # Настройка Frontend
          echo "⚛️ Setting up Next.js frontend..."
          cd /opt/teleshop/01-user-dashboard
          
          # Устанавливаем зависимости
          npm ci --legacy-peer-deps
          
          # Сборка для production
          NODE_ENV=production npm run build
          
          echo "✅ Frontend built"
          
          # Создаем PM2 конфигурацию
          cd /opt/teleshop
          cat > ecosystem.config.js << 'EOF'
          module.exports = {
            apps: [
              {
                name: 'teleshop-backend',
                script: '/opt/teleshop/05-server-launchers/main/venv/bin/python',
                args: '/opt/teleshop/05-server-launchers/main/api_server.py',
                cwd: '/opt/teleshop/05-server-launchers/main',
                interpreter: 'none',
                env: {
                  NODE_ENV: 'production',
                  PYTHONPATH: '/opt/teleshop/05-server-launchers/main'
                },
                instances: 1,
                exec_mode: 'fork',
                watch: false,
                max_memory_restart: '1G',
                log_file: '/var/log/teleshop-backend.log',
                error_file: '/var/log/teleshop-backend-error.log', 
                out_file: '/var/log/teleshop-backend-out.log',
                time: true,
                restart_delay: 5000,
                max_restarts: 10
              },
              {
                name: 'teleshop-frontend',
                script: 'npm',
                args: 'start',
                cwd: '/opt/teleshop/01-user-dashboard',
                env: {
                  NODE_ENV: 'production',
                  PORT: 3000
                },
                instances: 1,
                exec_mode: 'fork',
                watch: false,
                max_memory_restart: '2G',
                log_file: '/var/log/teleshop-frontend.log',
                error_file: '/var/log/teleshop-frontend-error.log',
                out_file: '/var/log/teleshop-frontend-out.log',
                time: true
              }
            ]
          };
          EOF
          
          # Останавливаем старые процессы и запускаем новые
          pm2 delete all 2>/dev/null || true
          pm2 start ecosystem.config.js
          pm2 save
          pm2 startup
          
          echo "🎉 TeleShop deployed successfully!"
          echo "🌐 Frontend: http://178.236.17.93:3000"
          echo "🔧 Backend: http://178.236.17.93:8000"
          
          # Показываем статус
          pm2 status 