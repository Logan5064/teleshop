from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import ContextTypes
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
import os
import json


# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ shared –º–æ–¥—É–ª—è–º
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ shared –º–æ–¥—É–ª—è–º
import sys
import os
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = current_dir
for _ in range(10):  # –ò—â–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
    if os.path.exists(os.path.join(project_root, "main_launcher.py")):
        break
    project_root = os.path.dirname(project_root)
shared_path = os.path.join(project_root, "05-server-launchers", "config")
sys.path.insert(0, shared_path)

from shared.utils.database import AsyncSessionLocal
from shared.models.user import User
from shared.models.shop import Shop

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ URL –∏–∑ config.json
def get_web_app_url():
    try:
        with open('config.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
            return config.get("web_app_url", "http://localhost:8000")
    except:
        return os.getenv("WEB_APP_URL", "http://localhost:8000")

# URL Web App - —á–∏—Ç–∞–µ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
WEB_APP_URL = get_web_app_url()

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    async with AsyncSessionLocal() as db:
        await create_or_get_user(db, user)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [InlineKeyboardButton("üè™ –ú–æ–π –º–∞–≥–∞–∑–∏–Ω", callback_data="my_shop")],
        [InlineKeyboardButton("üõçÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞–≥–∞–∑–∏–Ω–æ–≤", callback_data="browse_shops")],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram Shops, {user.first_name}!

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
"""
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    user = update.effective_user
    
    if query.data == "my_shop":
        await handle_my_shop(query, user)
    elif query.data == "browse_shops":
        await handle_browse_shops(query)
    elif query.data == "help":
        await handle_help(query)
    elif query.data == "back_to_main":
        await handle_back_to_main(query, user)
    elif query.data == "create_shop":
        await handle_create_shop(query, user)

async def handle_my_shop(query, user):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ '–ú–æ–π –º–∞–≥–∞–∑–∏–Ω'"""
    async with AsyncSessionLocal() as db:
        db_user = await get_user_by_telegram_id(db, user.id)
        if not db_user:
            await query.edit_message_text("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        result = await db.execute(
            select(Shop).where(Shop.user_id == db_user.id)
        )
        shop = result.scalar_one_or_none()
        
        if shop:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –º–∞–≥–∞–∑–∏–Ω–∞
            keyboard = []
            
            if shop.blocks_structure:
                # –ï—Å–ª–∏ –µ—Å—Ç—å –±–ª–æ—á–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
                keyboard.append([InlineKeyboardButton(
                    "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", 
                    web_app=WebAppInfo(url=f"{WEB_APP_URL}/shop/{shop.id}")
                )])
                keyboard.append([InlineKeyboardButton(
                    "üé® –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∑–∞–π–Ω", 
                    web_app=WebAppInfo(url=f"{WEB_APP_URL}/constructor?shop_id={shop.id}")
                )])
                
                text = f"""
üè™ –í–∞—à –º–∞–≥–∞–∑–∏–Ω: {shop.name}

üìù –û–ø–∏—Å–∞–Ω–∏–µ: {shop.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üí∞ –í–∞–ª—é—Ç–∞: {shop.currency or 'RUB'}
üìÖ –°–æ–∑–¥–∞–Ω: {shop.created_at.strftime('%d.%m.%Y')}
üîÑ –û–±–Ω–æ–≤–ª–µ–Ω: {shop.updated_at.strftime('%d.%m.%Y %H:%M') if shop.updated_at else '–Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è'}

‚úÖ –ú–∞–≥–∞–∑–∏–Ω –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É!
"""
            else:
                # –ï—Å–ª–∏ –±–ª–æ—á–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞
                keyboard.append([InlineKeyboardButton(
                    "üé® –°–æ–∑–¥–∞—Ç—å –¥–∏–∑–∞–π–Ω", 
                    web_app=WebAppInfo(url=f"{WEB_APP_URL}/constructor?shop_id={shop.id}")
                )])
                
                text = f"""
üè™ –í–∞—à –º–∞–≥–∞–∑–∏–Ω: {shop.name}

üìù –û–ø–∏—Å–∞–Ω–∏–µ: {shop.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìÖ –°–æ–∑–¥–∞–Ω: {shop.created_at.strftime('%d.%m.%Y')}

‚ö†Ô∏è –î–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω –¥–∏–∑–∞–π–Ω. 
–°–æ–∑–¥–∞–π—Ç–µ –¥–∏–∑–∞–π–Ω –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ, —á—Ç–æ–±—ã –≤–∞—à –º–∞–≥–∞–∑–∏–Ω —Å—Ç–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º.
"""
            
            keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
            reply_markup = InlineKeyboardMarkup(keyboard)
            
        else:
            keyboard = [
                [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω", callback_data="create_shop")],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            text = """
–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞. 

–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –ø—Ä—è–º–æ –≤ Telegram!
"""
        
        await query.edit_message_text(text, reply_markup=reply_markup)

async def handle_browse_shops(query):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤"""
    keyboard = [
        [InlineKeyboardButton(
            "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥", 
            web_app=WebAppInfo(url=f"{WEB_APP_URL}/catalog")
        )],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    text = """
üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥ –º–∞–≥–∞–∑–∏–Ω–æ–≤

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –æ—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –∏ –¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑—ã.
"""
    
    await query.edit_message_text(text, reply_markup=reply_markup)

async def handle_help(query):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–º–æ—â–∏"""
    keyboard = [
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    text = """
‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é

üè™ –ú–æ–π –º–∞–≥–∞–∑–∏–Ω:
- –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –º–∞–≥–∞–∑–∏–Ω
- –î–æ–±–∞–≤–ª—è–π—Ç–µ —Ç–æ–≤–∞—Ä—ã —Å —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
- –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö

üõçÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞–≥–∞–∑–∏–Ω–æ–≤:
- –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
- –î–µ–ª–∞–π—Ç–µ –∑–∞–∫–∞–∑—ã –æ–¥–Ω–∏–º –Ω–∞–∂–∞—Ç–∏–µ–º

üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @your_support_bot
"""
    
    await query.edit_message_text(text, reply_markup=reply_markup)

async def create_or_get_user(db: AsyncSession, telegram_user) -> User:
    """–°–æ–∑–¥–∞–µ—Ç –∏–ª–∏ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    result = await db.execute(
        select(User).where(User.telegram_id == str(telegram_user.id))
    )
    user = result.scalar_one_or_none()
    
    if not user:
        user = User(
            telegram_id=str(telegram_user.id),
            username=telegram_user.username,
            first_name=telegram_user.first_name,
            last_name=telegram_user.last_name
        )
        db.add(user)
        await db.commit()
        await db.refresh(user)
    
    return user

async def get_user_by_telegram_id(db: AsyncSession, telegram_user_id: int) -> User:
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_user_id"""
    result = await db.execute(
        select(User).where(User.telegram_id == str(telegram_user_id))
    )
    return result.scalar_one_or_none()

async def handle_back_to_main(query, user):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é"""
    keyboard = [
        [InlineKeyboardButton("üè™ –ú–æ–π –º–∞–≥–∞–∑–∏–Ω", callback_data="my_shop")],
        [InlineKeyboardButton("üõçÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞–≥–∞–∑–∏–Ω–æ–≤", callback_data="browse_shops")],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram Shops, {user.first_name}!

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
"""
    
    await query.edit_message_text(welcome_text, reply_markup=reply_markup)

async def handle_create_shop(query, user):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞"""
    keyboard = [
        [InlineKeyboardButton(
            "üè™ –°–æ–∑–¥–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω", 
            web_app=WebAppInfo(url=f"{WEB_APP_URL}/dashboard")
        )],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    text = """
üè™ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω.
–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–∏–∑–∞–π–Ω –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ.
"""
    
    await query.edit_message_text(text, reply_markup=reply_markup) 