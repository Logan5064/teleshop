import React from 'react'

export const formStyles = [
  {
    name: '–°—Ç–µ–∫–ª—è–Ω–Ω—ã–π –∏–Ω–ø—É—Ç',
    code: 'ts-input-glass',
    component: React.createElement('input', { className: 'ts-input-glass', placeholder: '–°—Ç–µ–∫–ª—è–Ω–Ω—ã–π –∏–Ω–ø—É—Ç' })
  },
  {
    name: '–ù–µ–æ–º–æ—Ä—Ñ–Ω—ã–π –∏–Ω–ø—É—Ç',
    code: 'ts-input-neumorphic',
    component: React.createElement('input', { className: 'ts-input-neumorphic', placeholder: '–ù–µ–æ–º–æ—Ä—Ñ–Ω—ã–π –∏–Ω–ø—É—Ç' })
  },
  {
    name: '–û–±—ã—á–Ω—ã–π –∏–Ω–ø—É—Ç',
    code: 'border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
    component: React.createElement('input', { 
      className: 'border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent', 
      placeholder: '–û–±—ã—á–Ω—ã–π –∏–Ω–ø—É—Ç' 
    })
  },
  {
    name: '–ë–æ–ª—å—à–æ–π –∏–Ω–ø—É—Ç',
    code: 'w-full text-lg border border-gray-300 rounded-lg px-6 py-4 focus:outline-none focus:ring-2 focus:ring-blue-500',
    component: React.createElement('input', { 
      className: 'w-full text-lg border border-gray-300 rounded-lg px-6 py-4 focus:outline-none focus:ring-2 focus:ring-blue-500', 
      placeholder: '–ë–æ–ª—å—à–æ–π –∏–Ω–ø—É—Ç' 
    })
  },
  {
    name: '–ò–Ω–ø—É—Ç —Å –∏–∫–æ–Ω–∫–æ–π',
    code: 'relative',
    component: React.createElement('div', { className: 'relative' }, [
      React.createElement('input', { 
        className: 'pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500', 
        placeholder: '–ü–æ–∏—Å–∫...', 
        key: 'input' 
      }),
      React.createElement('div', { 
        className: 'absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400', 
        key: 'icon' 
      }, 'üîç')
    ])
  },
  {
    name: 'Floating Label',
    code: 'relative',
    component: React.createElement('div', { className: 'relative' }, [
      React.createElement('input', { 
        className: 'peer w-full px-4 pt-6 pb-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500', 
        placeholder: ' ', 
        key: 'input' 
      }),
      React.createElement('label', { 
        className: 'absolute left-4 top-2 text-xs text-gray-500 transition-all duration-200 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:text-base peer-focus:top-2 peer-focus:translate-y-0 peer-focus:text-xs', 
        key: 'label' 
      }, 'Email –∞–¥—Ä–µ—Å')
    ])
  },
  {
    name: '–°–µ–ª–µ–∫—Ç —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π',
    code: 'relative',
    component: React.createElement('div', { className: 'relative' }, [
      React.createElement('select', { 
        className: 'w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 appearance-none bg-white', 
        key: 'select' 
      }, [
        React.createElement('option', { key: '1' }, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é'),
        React.createElement('option', { key: '2' }, '–û–ø—Ü–∏—è 1'),
        React.createElement('option', { key: '3' }, '–û–ø—Ü–∏—è 2')
      ]),
      React.createElement('div', { 
        className: 'absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none', 
        key: 'arrow' 
      }, '‚ñº')
    ])
  },
  {
    name: '–ß–µ–∫–±–æ–∫—Å –∫–∞—Å—Ç–æ–º–Ω—ã–π',
    code: 'flex items-center space-x-3',
    component: React.createElement('label', { className: 'flex items-center space-x-3 cursor-pointer' }, [
      React.createElement('div', { className: 'relative', key: 'checkbox' }, [
        React.createElement('input', { type: 'checkbox', className: 'sr-only', key: 'input' }),
        React.createElement('div', { className: 'w-5 h-5 border-2 border-gray-300 rounded flex items-center justify-center bg-white', key: 'box' }, '‚úì')
      ]),
      React.createElement('span', { className: 'text-gray-700', key: 'label' }, '–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏')
    ])
  },
  {
    name: '–†–∞–¥–∏–æ –∫–Ω–æ–ø–∫–∏',
    code: 'space-y-2',
    component: React.createElement('div', { className: 'space-y-2' }, [
      React.createElement('label', { className: 'flex items-center space-x-3 cursor-pointer', key: '1' }, [
        React.createElement('div', { className: 'w-5 h-5 border-2 border-blue-500 rounded-full flex items-center justify-center', key: 'radio' }, 
          React.createElement('div', { className: 'w-2 h-2 bg-blue-500 rounded-full', key: 'dot' })
        ),
        React.createElement('span', { className: 'text-gray-700', key: 'label' }, '–í–∞—Ä–∏–∞–Ω—Ç 1')
      ]),
      React.createElement('label', { className: 'flex items-center space-x-3 cursor-pointer', key: '2' }, [
        React.createElement('div', { className: 'w-5 h-5 border-2 border-gray-300 rounded-full', key: 'radio' }),
        React.createElement('span', { className: 'text-gray-700', key: 'label' }, '–í–∞—Ä–∏–∞–Ω—Ç 2')
      ])
    ])
  },
  {
    name: '–¢–µ–∫—Å—Ç–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å',
    code: 'w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none',
    component: React.createElement('textarea', { 
      className: 'w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none', 
      placeholder: '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...', 
      rows: 4 
    })
  },
  {
    name: '–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å',
    code: 'flex items-center space-x-3',
    component: React.createElement('label', { className: 'flex items-center space-x-3 cursor-pointer' }, [
      React.createElement('div', { className: 'relative', key: 'toggle' }, [
        React.createElement('input', { type: 'checkbox', className: 'sr-only', key: 'input' }),
        React.createElement('div', { className: 'w-12 h-6 bg-blue-500 rounded-full shadow-inner', key: 'bg' }),
        React.createElement('div', { className: 'absolute w-5 h-5 bg-white rounded-full shadow top-0.5 right-0.5 transition-transform', key: 'thumb' })
      ]),
      React.createElement('span', { className: 'text-gray-700', key: 'label' }, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
    ])
  },
  {
    name: '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤',
    code: 'border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-blue-400 transition-colors',
    component: React.createElement('div', { className: 'border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-blue-400 transition-colors cursor-pointer' }, [
      React.createElement('div', { className: 'text-4xl text-gray-400 mb-4', key: 'icon' }, 'üìÅ'),
      React.createElement('p', { className: 'text-gray-600 mb-2', key: 'text' }, '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞'),
      React.createElement('p', { className: 'text-sm text-gray-500', key: 'subtext' }, '–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞')
    ])
  },
  {
    name: '–ò–Ω–ø—É—Ç —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π',
    code: 'space-y-2',
    component: React.createElement('div', { className: 'space-y-2' }, [
      React.createElement('input', { 
        className: 'w-full px-4 py-2 border border-red-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 bg-red-50', 
        placeholder: 'Email (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)', 
        key: 'input' 
      }),
      React.createElement('p', { className: 'text-sm text-red-600', key: 'error' }, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å')
    ])
  },
  {
    name: '–ü–æ–ª–µ –ø–∞—Ä–æ–ª—è',
    code: 'relative',
    component: React.createElement('div', { className: 'relative' }, [
      React.createElement('input', { 
        type: 'password', 
        className: 'w-full pr-12 pl-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500', 
        placeholder: '–ü–∞—Ä–æ–ª—å', 
        key: 'input' 
      }),
      React.createElement('button', { 
        className: 'absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600', 
        key: 'toggle' 
      }, 'üëÅÔ∏è')
    ])
  },
  {
    name: '–ò–Ω–ø—É—Ç —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º',
    code: 'flex items-center border border-gray-300 rounded-lg overflow-hidden',
    component: React.createElement('div', { className: 'flex items-center border border-gray-300 rounded-lg overflow-hidden focus-within:ring-2 focus-within:ring-blue-500' }, [
      React.createElement('span', { className: 'px-3 py-2 bg-gray-100 text-gray-600 text-sm', key: 'prefix' }, 'https://'),
      React.createElement('input', { 
        className: 'flex-1 px-3 py-2 focus:outline-none', 
        placeholder: '–≤–∞—à-—Å–∞–π—Ç.ru', 
        key: 'input' 
      })
    ])
  },
  {
    name: '–°–ª–∞–π–¥–µ—Ä',
    code: 'w-full',
    component: React.createElement('div', { className: 'w-full space-y-2' }, [
      React.createElement('label', { className: 'block text-sm font-medium text-gray-700', key: 'label' }, '–¶–µ–Ω–∞: ‚ÇΩ5,000'),
      React.createElement('input', { 
        type: 'range', 
        min: '0', 
        max: '10000', 
        defaultValue: '5000',
        className: 'w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider', 
        key: 'slider' 
      })
    ])
  },
  {
    name: '–ì—Ä—É–ø–ø–∞ –∫–Ω–æ–ø–æ–∫',
    code: 'flex rounded-lg overflow-hidden border border-gray-300',
    component: React.createElement('div', { className: 'flex rounded-lg overflow-hidden border border-gray-300' }, [
      React.createElement('button', { className: 'px-4 py-2 bg-blue-500 text-white hover:bg-blue-600', key: '1' }, '–ù–µ–¥–µ–ª—è'),
      React.createElement('button', { className: 'px-4 py-2 bg-gray-100 text-gray-700 hover:bg-gray-200 border-l border-gray-300', key: '2' }, '–ú–µ—Å—è—Ü'),
      React.createElement('button', { className: 'px-4 py-2 bg-gray-100 text-gray-700 hover:bg-gray-200 border-l border-gray-300', key: '3' }, '–ì–æ–¥')
    ])
  },
  {
    name: '–ú—É–ª—å—Ç–∏-—Å–µ–ª–µ–∫—Ç',
    code: 'space-y-2',
    component: React.createElement('div', { className: 'space-y-2' }, [
      React.createElement('label', { className: 'block text-sm font-medium text-gray-700', key: 'label' }, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–≥–∏:'),
      React.createElement('div', { className: 'flex flex-wrap gap-2', key: 'tags' }, [
        React.createElement('span', { className: 'px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm cursor-pointer hover:bg-blue-200', key: '1' }, 'React'),
        React.createElement('span', { className: 'px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm cursor-pointer hover:bg-green-200', key: '2' }, 'TypeScript'),
        React.createElement('span', { className: 'px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm cursor-pointer hover:bg-gray-200', key: '3' }, 'Next.js')
      ])
    ])
  },
  {
    name: '–ü–æ–∏—Å–∫ —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º',
    code: 'relative',
    component: React.createElement('div', { className: 'relative' }, [
      React.createElement('input', { 
        className: 'w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500', 
        placeholder: '–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å...', 
        key: 'input' 
      }),
      React.createElement('div', { className: 'absolute top-full left-0 right-0 bg-white border border-gray-200 rounded-lg shadow-lg mt-1 z-10', key: 'dropdown' }, [
        React.createElement('div', { className: 'px-4 py-2 hover:bg-gray-100 cursor-pointer', key: '1' }, '–†–µ–∑—É–ª—å—Ç–∞—Ç 1'),
        React.createElement('div', { className: 'px-4 py-2 hover:bg-gray-100 cursor-pointer', key: '2' }, '–†–µ–∑—É–ª—å—Ç–∞—Ç 2'),
        React.createElement('div', { className: 'px-4 py-2 bg-blue-50 text-blue-700 cursor-pointer', key: '3' }, '–†–µ–∑—É–ª—å—Ç–∞—Ç 3')
      ])
    ])
  },
  {
    name: '–†–µ–π—Ç–∏–Ω–≥ –∑–≤–µ–∑–¥—ã',
    code: 'flex items-center space-x-1',
    component: React.createElement('div', { className: 'space-y-2' }, [
      React.createElement('label', { className: 'block text-sm font-medium text-gray-700', key: 'label' }, '–û—Ü–µ–Ω–∫–∞:'),
      React.createElement('div', { className: 'flex items-center space-x-1', key: 'stars' }, [
        React.createElement('span', { className: 'text-2xl text-yellow-400 cursor-pointer hover:text-yellow-500', key: '1' }, '‚òÖ'),
        React.createElement('span', { className: 'text-2xl text-yellow-400 cursor-pointer hover:text-yellow-500', key: '2' }, '‚òÖ'),
        React.createElement('span', { className: 'text-2xl text-yellow-400 cursor-pointer hover:text-yellow-500', key: '3' }, '‚òÖ'),
        React.createElement('span', { className: 'text-2xl text-gray-300 cursor-pointer hover:text-yellow-500', key: '4' }, '‚òÖ'),
        React.createElement('span', { className: 'text-2xl text-gray-300 cursor-pointer hover:text-yellow-500', key: '5' }, '‚òÖ')
      ])
    ])
  },
  {
    name: '–¶–≤–µ—Ç–æ–≤–æ–π –ø–∏–∫–µ—Ä',
    code: 'space-y-3',
    component: React.createElement('div', { className: 'space-y-3' }, [
      React.createElement('label', { className: 'block text-sm font-medium text-gray-700', key: 'label' }, '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç:'),
      React.createElement('div', { className: 'flex items-center space-x-2', key: 'picker' }, [
        React.createElement('input', { type: 'color', defaultValue: '#3b82f6', className: 'w-12 h-12 border border-gray-300 rounded cursor-pointer', key: 'input' }),
        React.createElement('span', { className: 'text-sm text-gray-600', key: 'value' }, '#3b82f6')
      ])
    ])
  },
  {
    name: '–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã',
    code: 'space-y-4 bg-white p-6 rounded-lg border border-gray-200',
    component: React.createElement('div', { className: 'space-y-4 bg-white p-6 rounded-lg border border-gray-200' }, [
      React.createElement('h3', { className: 'font-bold text-lg mb-4', key: 'title' }, '–î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã'),
      React.createElement('input', { className: 'w-full px-4 py-2 border border-gray-300 rounded-lg', placeholder: '1234 5678 9012 3456', key: 'card' }),
      React.createElement('div', { className: 'flex space-x-4', key: 'row' }, [
        React.createElement('input', { className: 'flex-1 px-4 py-2 border border-gray-300 rounded-lg', placeholder: 'MM/YY', key: 'exp' }),
        React.createElement('input', { className: 'w-20 px-4 py-2 border border-gray-300 rounded-lg', placeholder: 'CVV', key: 'cvv' })
      ])
    ])
  },
  {
    name: '–ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏',
    code: 'bg-gray-50 p-4 rounded-lg space-y-3',
    component: React.createElement('div', { className: 'bg-gray-50 p-4 rounded-lg space-y-3' }, [
      React.createElement('div', { className: 'relative', key: 'search' }, [
        React.createElement('input', { className: 'w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg', placeholder: '–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤...', key: 'input' }),
        React.createElement('div', { className: 'absolute left-3 top-1/2 transform -translate-y-1/2', key: 'icon' }, 'üîç')
      ]),
      React.createElement('div', { className: 'flex flex-wrap gap-2', key: 'filters' }, [
        React.createElement('select', { className: 'px-3 py-1 border border-gray-300 rounded text-sm', key: 'cat' }, [
          React.createElement('option', { key: '1' }, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è'),
          React.createElement('option', { key: '2' }, '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞')
        ]),
        React.createElement('select', { className: 'px-3 py-1 border border-gray-300 rounded text-sm', key: 'price' }, [
          React.createElement('option', { key: '1' }, '–¶–µ–Ω–∞'),
          React.createElement('option', { key: '2' }, '–î–æ 1000‚ÇΩ')
        ])
      ])
    ])
  },
  {
    name: '–û–ø—Ä–æ—Å–Ω–∏–∫',
    code: 'space-y-4 bg-white p-6 rounded-lg border border-gray-200',
    component: React.createElement('div', { className: 'space-y-4 bg-white p-6 rounded-lg border border-gray-200' }, [
      React.createElement('h3', { className: 'font-bold mb-4', key: 'title' }, '–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–∏—Å'),
      React.createElement('div', { className: 'space-y-3', key: 'questions' }, [
        React.createElement('div', { key: 'q1' }, [
          React.createElement('p', { className: 'text-sm font-medium mb-2', key: 'text' }, '–ö–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è'),
          React.createElement('div', { className: 'flex space-x-2', key: 'options' }, [
            React.createElement('button', { className: 'px-3 py-1 bg-green-500 text-white rounded text-sm', key: '1' }, '–û—Ç–ª–∏—á–Ω–æ'),
            React.createElement('button', { className: 'px-3 py-1 bg-gray-200 text-gray-700 rounded text-sm', key: '2' }, '–•–æ—Ä–æ—à–æ'),
            React.createElement('button', { className: 'px-3 py-1 bg-gray-200 text-gray-700 rounded text-sm', key: '3' }, '–ü–ª–æ—Ö–æ')
          ])
        ])
      ])
    ])
  },
  {
    name: '–õ–æ–≥–∏–Ω —Ñ–æ—Ä–º–∞',
    code: 'space-y-4 bg-white p-6 rounded-lg shadow-lg max-w-sm',
    component: React.createElement('div', { className: 'space-y-4 bg-white p-6 rounded-lg shadow-lg max-w-sm' }, [
      React.createElement('h2', { className: 'text-xl font-bold text-center', key: 'title' }, '–í—Ö–æ–¥'),
      React.createElement('input', { type: 'email', className: 'w-full px-4 py-2 border border-gray-300 rounded-lg', placeholder: 'Email', key: 'email' }),
      React.createElement('input', { type: 'password', className: 'w-full px-4 py-2 border border-gray-300 rounded-lg', placeholder: '–ü–∞—Ä–æ–ª—å', key: 'pass' }),
      React.createElement('button', { className: 'w-full bg-blue-500 text-white py-2 rounded-lg hover:bg-blue-600', key: 'submit' }, '–í–æ–π—Ç–∏'),
      React.createElement('p', { className: 'text-center text-sm text-gray-600', key: 'forgot' }, '–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?')
    ])
  },
  {
    name: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ñ–æ—Ä–º–∞',
    code: 'space-y-4 bg-white p-6 rounded-lg shadow-lg max-w-md',
    component: React.createElement('div', { className: 'space-y-4 bg-white p-6 rounded-lg shadow-lg max-w-md' }, [
      React.createElement('h2', { className: 'text-xl font-bold text-center', key: 'title' }, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'),
      React.createElement('div', { className: 'grid grid-cols-2 gap-3', key: 'names' }, [
        React.createElement('input', { className: 'px-4 py-2 border border-gray-300 rounded-lg', placeholder: '–ò–º—è', key: 'first' }),
        React.createElement('input', { className: 'px-4 py-2 border border-gray-300 rounded-lg', placeholder: '–§–∞–º–∏–ª–∏—è', key: 'last' })
      ]),
      React.createElement('input', { type: 'email', className: 'w-full px-4 py-2 border border-gray-300 rounded-lg', placeholder: 'Email', key: 'email' }),
      React.createElement('input', { type: 'password', className: 'w-full px-4 py-2 border border-gray-300 rounded-lg', placeholder: '–ü–∞—Ä–æ–ª—å', key: 'pass' }),
      React.createElement('label', { className: 'flex items-center space-x-2', key: 'terms' }, [
        React.createElement('input', { type: 'checkbox', key: 'check' }),
        React.createElement('span', { className: 'text-sm text-gray-600', key: 'text' }, '–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏')
      ]),
      React.createElement('button', { className: 'w-full bg-green-500 text-white py-2 rounded-lg hover:bg-green-600', key: 'submit' }, '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
    ])
  },
  {
    name: '–§–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤',
    code: 'space-y-4 bg-gray-50 p-6 rounded-lg border border-gray-200',
    component: React.createElement('div', { className: 'space-y-4 bg-gray-50 p-6 rounded-lg border border-gray-200' }, [
      React.createElement('h3', { className: 'font-bold text-lg', key: 'title' }, '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏'),
      React.createElement('div', { className: 'grid grid-cols-2 gap-3', key: 'row1' }, [
        React.createElement('input', { className: 'px-4 py-2 border border-gray-300 rounded-lg bg-white', placeholder: '–ò–º—è', key: 'name' }),
        React.createElement('input', { type: 'email', className: 'px-4 py-2 border border-gray-300 rounded-lg bg-white', placeholder: 'Email', key: 'email' })
      ]),
      React.createElement('input', { className: 'w-full px-4 py-2 border border-gray-300 rounded-lg bg-white', placeholder: '–¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è', key: 'subject' }),
      React.createElement('textarea', { className: 'w-full px-4 py-3 border border-gray-300 rounded-lg bg-white resize-none', placeholder: '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...', rows: 4, key: 'message' }),
      React.createElement('button', { className: 'bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600', key: 'submit' }, '–û—Ç–ø—Ä–∞–≤–∏—Ç—å')
    ])
  },
  {
    name: '–§–æ—Ä–º–∞ –ø–æ–¥–ø–∏—Å–∫–∏',
    code: 'bg-gradient-to-r from-purple-500 to-pink-500 text-white p-6 rounded-lg',
    component: React.createElement('div', { className: 'bg-gradient-to-r from-purple-500 to-pink-500 text-white p-6 rounded-lg' }, [
      React.createElement('h3', { className: 'font-bold text-lg mb-2', key: 'title' }, '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É'),
      React.createElement('p', { className: 'text-white/90 text-sm mb-4', key: 'desc' }, '–ü–æ–ª—É—á–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–∫–∏–¥–∫–∏'),
      React.createElement('div', { className: 'flex space-x-2', key: 'form' }, [
        React.createElement('input', { type: 'email', className: 'flex-1 px-4 py-2 rounded-lg text-gray-900', placeholder: '–í–∞—à email', key: 'email' }),
        React.createElement('button', { className: 'bg-white text-purple-500 px-6 py-2 rounded-lg font-medium hover:bg-gray-100', key: 'submit' }, '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')
      ])
    ])
  },
  {
    name: '–ò–Ω–ø—É—Ç –¥–∞—Ç—ã',
    code: 'space-y-2',
    component: React.createElement('div', { className: 'space-y-2' }, [
      React.createElement('label', { className: 'block text-sm font-medium text-gray-700', key: 'label' }, '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è'),
      React.createElement('div', { className: 'flex space-x-2', key: 'date' }, [
        React.createElement('select', { className: 'flex-1 px-3 py-2 border border-gray-300 rounded-lg', key: 'day' }, [
          React.createElement('option', { key: '1' }, '–î–µ–Ω—å'),
          React.createElement('option', { key: '2' }, '15')
        ]),
        React.createElement('select', { className: 'flex-1 px-3 py-2 border border-gray-300 rounded-lg', key: 'month' }, [
          React.createElement('option', { key: '1' }, '–ú–µ—Å—è—Ü'),
          React.createElement('option', { key: '2' }, '–Ø–Ω–≤–∞—Ä—å')
        ]),
        React.createElement('select', { className: 'flex-1 px-3 py-2 border border-gray-300 rounded-lg', key: 'year' }, [
          React.createElement('option', { key: '1' }, '–ì–æ–¥'),
          React.createElement('option', { key: '2' }, '1990')
        ])
      ])
    ])
  },
  {
    name: '–ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
    code: 'space-y-2',
    component: React.createElement('div', { className: 'space-y-2' }, [
      React.createElement('label', { className: 'block text-sm font-medium text-gray-700', key: 'label' }, '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'),
      React.createElement('div', { className: 'flex', key: 'phone' }, [
        React.createElement('select', { className: 'px-3 py-2 border border-gray-300 rounded-l-lg border-r-0 bg-gray-50', key: 'code' }, [
          React.createElement('option', { key: '1' }, '+7'),
          React.createElement('option', { key: '2' }, '+1')
        ]),
        React.createElement('input', { type: 'tel', className: 'flex-1 px-4 py-2 border border-gray-300 rounded-r-lg', placeholder: '(123) 456-7890', key: 'number' })
      ])
    ])
  },
  {
    name: '–°—Ç—ç–ø–ø–µ—Ä —á–∏—Å–ª–µ–Ω–Ω—ã–π',
    code: 'flex items-center space-x-3',
    component: React.createElement('div', { className: 'flex items-center space-x-3' }, [
      React.createElement('span', { className: 'text-sm font-medium text-gray-700', key: 'label' }, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:'),
      React.createElement('div', { className: 'flex items-center border border-gray-300 rounded-lg', key: 'stepper' }, [
        React.createElement('button', { className: 'px-3 py-2 text-gray-600 hover:bg-gray-100', key: 'minus' }, '‚àí'),
        React.createElement('input', { type: 'number', defaultValue: '1', className: 'w-16 px-2 py-2 text-center border-0 focus:outline-none', key: 'input' }),
        React.createElement('button', { className: 'px-3 py-2 text-gray-600 hover:bg-gray-100', key: 'plus' }, '+')
      ])
    ])
  }
] 