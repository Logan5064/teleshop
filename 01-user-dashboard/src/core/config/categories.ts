// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–ª–æ–∫–æ–≤ TeleShop Constructor

import React from 'react';
import { BlockType, BlockCategory, BlockInfo } from '@/types/blocks'

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª–æ–∫–æ–≤ –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
export const blockCategories: Record<string, BlockCategory> = {
  telegram: {
    id: 'telegram',
    name: 'Telegram',
    icon: 'üì±',
    blocks: [
      {
        type: 'telegram-banner',
        title: '–ë–∞–Ω–Ω–µ—Ä',
        icon: 'üéØ',
        description: '–ë–∞–Ω–Ω–µ—Ä —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è Telegram'
      },
      {
        type: 'telegram-categories',
        title: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
        icon: 'üìë',
        description: '–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è Telegram'
      }
    ]
  },
  basic: {
    id: 'basic',
    name: '–ë–∞–∑–æ–≤—ã–µ',
    icon: 'üì¶',
    blocks: [
      {
        type: 'banner',
        title: '–ë–∞–Ω–Ω–µ—Ä',
        description: '–ë–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π',
        icon: 'üñºÔ∏è'
      },
      {
        type: 'text',
        title: '–¢–µ–∫—Å—Ç',
        description: '–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º',
        icon: 'üìù'
      },
      {
        type: 'button',
        title: '–ö–Ω–æ–ø–∫–∞',
        description: '–ö–Ω–æ–ø–∫–∞ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º',
        icon: 'üîò'
      },
      {
        type: 'image',
        title: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        description: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é',
        icon: 'üñºÔ∏è'
      },
      {
        type: 'spacer',
        title: '–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å',
        description: '–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø',
        icon: '‚ÜïÔ∏è'
      }
    ]
  },
  commerce: {
    id: 'commerce',
    name: '–ö–æ–º–º–µ—Ä—Ü–∏—è',
    icon: 'üõçÔ∏è',
    blocks: [
      {
        type: 'product-grid',
        title: '–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤',
        icon: 'üìã',
        description: '–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏'
      },
      {
        type: 'telegram-product',
        title: '–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞',
        icon: 'üè∑Ô∏è',
        description: '–î–µ—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞'
      }
    ]
  },
  content: {
    id: 'content',
    name: '–ö–æ–Ω—Ç–µ–Ω—Ç',
    icon: 'üìÑ',
    blocks: [
      {
        type: 'telegram-product',
        title: '–¢–æ–≤–∞—Ä',
        description: '–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º',
        icon: 'üõçÔ∏è'
      },
      {
        type: 'product-grid',
        title: '–°–µ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤',
        description: '–°–µ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏',
        icon: 'üè™'
      },
      {
        type: 'categories',
        title: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
        description: '–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –∏–∫–æ–Ω–∫–∞–º–∏',
        icon: 'üìë'
      },
      {
        type: 'features',
        title: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
        description: '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ —Å –∏–∫–æ–Ω–∫–∞–º–∏',
        icon: '‚ú®'
      },
      {
        type: 'testimonials',
        title: '–û—Ç–∑—ã–≤—ã',
        description: '–ö–∞—Ä—É—Å–µ–ª—å –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤',
        icon: 'üí¨'
      },
      {
        type: 'price-list',
        title: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç',
        description: '–°–ø–∏—Å–æ–∫ —Ü–µ–Ω –Ω–∞ —É—Å–ª—É–≥–∏',
        icon: 'üí∞'
      }
    ]
  },
  forms: {
    id: 'forms',
    name: '–§–æ—Ä–º—ã',
    icon: 'üìã',
    blocks: [
      {
        type: 'contact',
        title: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞',
        icon: '‚úâÔ∏è',
        description: '–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏'
      },
      {
        type: 'form',
        title: '–§–æ—Ä–º–∞ –ø–æ–¥–ø–∏—Å–∫–∏',
        icon: 'üì®',
        description: '–§–æ—Ä–º–∞ –¥–ª—è —Å–±–æ—Ä–∞ email-–∞–¥—Ä–µ—Å–æ–≤'
      }
    ]
  },
  headers: {
    id: 'headers',
    name: '–®–∞–ø–∫–∏',
    icon: 'üé©',
    blocks: [
      {
        type: 'header',
        title: '–ü—Ä–æ—Å—Ç–∞—è —à–∞–ø–∫–∞',
        icon: 'üì∞',
        description: '–ü—Ä–æ—Å—Ç–∞—è —à–∞–ø–∫–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∏ –º–µ–Ω—é'
      },
      {
        type: 'header',
        title: '–ü–æ–ª–Ω–∞—è —à–∞–ø–∫–∞',
        icon: 'üóûÔ∏è',
        description: '–®–∞–ø–∫–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏'
      }
    ]
  },
  interactive: {
    id: 'interactive',
    name: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤',
    icon: 'üéØ',
    blocks: [
      {
        type: 'order-form',
        title: '–§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞',
        description: '–§–æ—Ä–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞',
        icon: 'üìù'
      },
      {
        type: 'payment',
        title: '–û–ø–ª–∞—Ç–∞',
        description: '–í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã',
        icon: 'üí≥'
      },
      {
        type: 'delivery-info',
        title: '–î–æ—Å—Ç–∞–≤–∫–∞',
        description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ',
        icon: 'üöö'
      },
      {
        type: 'cart',
        title: '–ö–æ—Ä–∑–∏–Ω–∞',
        description: '–ö–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤',
        icon: 'üõí'
      },
      {
        type: 'form',
        title: '–§–æ—Ä–º–∞',
        description: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞',
        icon: 'üìã'
      },
      {
        type: 'contact',
        title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
        description: '–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏',
        icon: 'üìû'
      }
    ]
  },
  media: {
    id: 'media',
    name: '–ú–µ–¥–∏–∞',
    icon: 'üé•',
    blocks: [
      {
        type: 'social',
        title: '–°–æ—Ü—Å–µ—Ç–∏',
        description: '–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏',
        icon: 'üì±'
      },
      {
        type: 'map',
        title: '–ö–∞—Ä—Ç–∞',
        description: '–ö–∞—Ä—Ç–∞ —Å –º–∞—Ä–∫–µ—Ä–æ–º',
        icon: 'üó∫Ô∏è'
      },
      {
        type: 'video',
        title: '–í–∏–¥–µ–æ',
        description: '–í–∏–¥–µ–æ —Å YouTube –∏–ª–∏ Vimeo',
        icon: 'üé¨'
      }
    ]
  }
};

// –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID
export const getCategoryById = (id: string): BlockCategory | undefined => {
  return blockCategories[id];
}

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –±–ª–æ–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
export const getBlocksByCategory = (categoryId: string): BlockType[] => {
  const category = getCategoryById(categoryId);
  return category?.blocks.map(block => block.type) || [];
}

// –ù–∞–π—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–ª–æ–∫–∞
export const getCategoryByBlock = (blockType: BlockType): BlockCategory | undefined => {
  return Object.values(blockCategories).find(category => 
    category.blocks.some(block => block.type === blockType)
  );
} 