#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∫–æ–Ω–∫–∏ –¥–ª—è TeleShop Constructor
–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

from PIL import Image, ImageDraw, ImageFont
import os

def create_teleshop_icon():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ TeleShop Constructor"""
    
    # –†–∞–∑–º–µ—Ä—ã –∏–∫–æ–Ω–∫–∏
    sizes = [16, 32, 48, 64, 128, 256]
    
    for size in sizes:
        # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = Image.new('RGBA', (size, size), (0, 0, 0, 0))
        draw = ImageDraw.Draw(img)
        
        # –¶–≤–µ—Ç–∞ TeleShop
        bg_color = (59, 130, 246)  # –°–∏–Ω–∏–π
        accent_color = (147, 51, 234)  # –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
        white = (255, 255, 255)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫—Ä—É–≥
        margin = max(2, size // 16)
        circle_size = size - margin * 2
        draw.ellipse([margin, margin, margin + circle_size, margin + circle_size], 
                    fill=bg_color, outline=accent_color, width=max(1, size // 32))
        
        # –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –¥–∏–∑–∞–π–Ω
        center = size // 2
        
        if size >= 32:
            # –°–∏–º–≤–æ–ª "T" –¥–ª—è TeleShop
            font_size = max(size // 3, 8)
            try:
                font = ImageFont.truetype("arial.ttf", font_size)
            except:
                font = ImageFont.load_default()
            
            # –†–∏—Å—É–µ–º "T"
            text = "T"
            bbox = draw.textbbox((0, 0), text, font=font)
            text_width = bbox[2] - bbox[0]
            text_height = bbox[3] - bbox[1]
            
            text_x = center - text_width // 2
            text_y = center - text_height // 2
            
            draw.text((text_x, text_y), text, fill=white, font=font)
            
        else:
            # –î–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ - –ø—Ä–æ—Å—Ç–∞—è —Ç–æ—á–∫–∞
            dot_size = max(size // 4, 2)
            draw.ellipse([center - dot_size, center - dot_size, 
                         center + dot_size, center + dot_size], fill=white)
        
        # –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç (–ø—Ä–æ—Å—Ç–∞—è –∏–º–∏—Ç–∞—Ü–∏—è)
        if size >= 64:
            overlay = Image.new('RGBA', (size, size), (0, 0, 0, 0))
            overlay_draw = ImageDraw.Draw(overlay)
            
            # –ë–ª–∏–∫ —Å–≤–µ—Ä—Ö—É
            highlight_size = size // 3
            overlay_draw.ellipse([size // 4, size // 6, 
                                size // 4 + highlight_size, size // 6 + highlight_size], 
                               fill=(255, 255, 255, 40))
            
            img = Image.alpha_composite(img, overlay)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        filename = f"teleshop-icon-{size}x{size}.png"
        img.save(filename, "PNG")
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞: {filename}")
    
    # –°–æ–∑–¥–∞–µ–º ICO —Ñ–∞–π–ª
    create_ico_file()
    
    print("üé® –í—Å–µ –∏–∫–æ–Ω–∫–∏ —Å–æ–∑–¥–∞–Ω—ã!")

def create_ico_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ .ico —Ñ–∞–π–ª–∞ –¥–ª—è Windows"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º PNG —Ñ–∞–π–ª—ã —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
        images = []
        for size in [16, 32, 48, 64]:
            filename = f"teleshop-icon-{size}x{size}.png"
            if os.path.exists(filename):
                images.append(Image.open(filename))
        
        if images:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ ICO
            images[0].save("teleshop-constructor.ico", format='ICO', 
                          sizes=[(img.width, img.height) for img in images])
            print("‚úÖ –°–æ–∑–¥–∞–Ω ICO —Ñ–∞–π–ª: teleshop-constructor.ico")
            
            # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ PNG —Ñ–∞–π–ª—ã
            for size in [16, 32, 48, 64, 128, 256]:
                filename = f"teleshop-icon-{size}x{size}.png"
                if os.path.exists(filename):
                    os.remove(filename)
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ICO: {e}")

if __name__ == "__main__":
    create_teleshop_icon() 