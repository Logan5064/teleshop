import tkinter as tk
from tkinter import messagebox
import subprocess
import os
import sys

def log(message):
    print(f"[GUI LOG] {message}")
    sys.stdout.flush()

class TeleShopGUI:
    def __init__(self, root):
        log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GUI...")
        self.root = root
        self.root.title('TeleShop Manager with Logs')
        self.root.geometry('500x350')
        self.root.configure(bg='#2d2d30')
        
        log("–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
        tk.Label(self.root, text='TeleShop Manager', font=('Arial', 18, 'bold'), 
                fg='#4CAF50', bg='#2d2d30').pack(pady=20)
        
        tk.Button(self.root, text='ü§ñ –ó–∞–ø—É—Å—Ç–∏—Ç—å Auth Bot', command=self.start_auth_bot,
                bg='#FF9800', fg='white', font=('Arial', 11), width=25, pady=8).pack(pady=5)
        
        tk.Button(self.root, text='‚öôÔ∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å Backend API', command=self.start_backend,
                bg='#9C27B0', fg='white', font=('Arial', 11), width=25, pady=8).pack(pady=5)
        
        tk.Button(self.root, text='üåê –ó–∞–ø—É—Å—Ç–∏—Ç—å Frontend', command=self.start_frontend,
                bg='#2196F3', fg='white', font=('Arial', 11), width=25, pady=8).pack(pady=5)
        
        tk.Button(self.root, text='üöÄ –°–æ–∑–¥–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å', command=self.create_tunnel,
                bg='#4CAF50', fg='white', font=('Arial', 11), width=25, pady=8).pack(pady=5)
        
        tk.Button(self.root, text='‚ùå –ó–∞–∫—Ä—ã—Ç—å', command=self.close_app,
                bg='#f44336', fg='white', font=('Arial', 11), width=25, pady=8).pack(pady=20)
        
        log("GUI –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    
    def close_app(self):
        log("–ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        self.root.quit()
    
    def start_auth_bot(self):
        log("=== –ó–ê–ü–£–°–ö AUTH BOT ===")
        log("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–∏: auth-bot/simple_auth_bot.py")
        
        if os.path.exists('auth-bot/simple_auth_bot.py'):
            log("‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω!")
        else:
            log("‚ùå –§–∞–π–ª –ù–ï –Ω–∞–π–¥–µ–Ω!")
            log(f"–¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: {os.getcwd()}")
            log(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ auth-bot: {os.listdir('auth-bot') if os.path.exists('auth-bot') else '–ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'}")
        
        try:
            log("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: python simple_auth_bot.py –≤ –ø–∞–ø–∫–µ auth-bot")
            process = subprocess.Popen(['python', 'simple_auth_bot.py'], cwd='auth-bot', 
                                     creationflags=subprocess.CREATE_NEW_CONSOLE)
            log(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω —Å PID: {process.pid}")
            messagebox.showinfo('‚úÖ –£—Å–ø–µ—Ö', 'Auth Bot –∑–∞–ø—É—â–µ–Ω –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!')
        except Exception as e:
            log(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
            messagebox.showerror('‚ùå –û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Auth Bot:\n{e}')
    
    def start_backend(self):
        log("=== –ó–ê–ü–£–°–ö BACKEND API ===")
        log("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–∏: 05-server-launchers/main/main_secure_fixed.py")
        
        if os.path.exists('05-server-launchers/main/main_secure_fixed.py'):
            log("‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω!")
        else:
            log("‚ùå –§–∞–π–ª –ù–ï –Ω–∞–π–¥–µ–Ω!")
            log(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ 05-server-launchers/main: {os.listdir('05-server-launchers/main') if os.path.exists('05-server-launchers/main') else '–ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'}")
        
        try:
            log("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: python main_secure_fixed.py –≤ –ø–∞–ø–∫–µ 05-server-launchers/main")
            process = subprocess.Popen(['python', 'main_secure_fixed.py'], 
                                     cwd='05-server-launchers/main',
                                     creationflags=subprocess.CREATE_NEW_CONSOLE)
            log(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω —Å PID: {process.pid}")
            messagebox.showinfo('‚úÖ –£—Å–ø–µ—Ö', 'Backend API –∑–∞–ø—É—â–µ–Ω –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!')
        except Exception as e:
            log(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
            messagebox.showerror('‚ùå –û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Backend:\n{e}')
    
    def start_frontend(self):
        log("=== –ó–ê–ü–£–°–ö FRONTEND ===")
        log("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–∏: 01-user-dashboard/")
        
        if os.path.exists('01-user-dashboard'):
            log("‚úÖ –ü–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞!")
            if os.path.exists('01-user-dashboard/package.json'):
                log("‚úÖ package.json –Ω–∞–π–¥–µ–Ω!")
            else:
                log("‚ùå package.json –ù–ï –Ω–∞–π–¥–µ–Ω!")
        else:
            log("‚ùå –ü–∞–ø–∫–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
        
        try:
            log("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: npm run dev –≤ –ø–∞–ø–∫–µ 01-user-dashboard")
            process = subprocess.Popen(['npm', 'run', 'dev'], cwd='01-user-dashboard',
                                     creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
            log(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω —Å PID: {process.pid}")
            messagebox.showinfo('‚úÖ –£—Å–ø–µ—Ö', 'Frontend –∑–∞–ø—É—â–µ–Ω –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!')
        except Exception as e:
            log(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
            messagebox.showerror('‚ùå –û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Frontend:\n{e}')
    
    def create_tunnel(self):
        log("=== –°–û–ó–î–ê–ù–ò–ï –¢–£–ù–ù–ï–õ–Ø ===")
        try:
            log("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: npx localtunnel --port 3000")
            process = subprocess.Popen(['npx', 'localtunnel', '--port', '3000'], 
                                     creationflags=subprocess.CREATE_NEW_CONSOLE, shell=True)
            log(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω —Å PID: {process.pid}")
            messagebox.showinfo('‚úÖ –£—Å–ø–µ—Ö', '–¢—É–Ω–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ!\nURL –ø–æ—è–≤–∏—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏')
        except Exception as e:
            log(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
            messagebox.showerror('‚ùå –û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å:\n{e}')

if __name__ == '__main__':
    log("–ó–∞–ø—É—Å–∫ TeleShop GUI —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
    log(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    log(f"–†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {os.getcwd()}")
    
    root = tk.Tk()
    app = TeleShopGUI(root)
    
    log("–ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ GUI...")
    root.mainloop()
    log("GUI –∑–∞–≤–µ—Ä—à–µ–Ω.") 