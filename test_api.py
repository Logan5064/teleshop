#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API auth-bot
"""

import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8080"

def test_health():
    """–¢–µ—Å—Ç health —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ Health check: {response.status_code}")
        print(f"üìÑ Response: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå Health check failed: {e}")
        return False

def test_generate_code():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞"""
    try:
        response = requests.post(f"{BASE_URL}/test/generate-code")
        print(f"‚úÖ Generate code: {response.status_code}")
        data = response.json()
        print(f"üìÑ Response: {data}")
        return data.get('code') if data.get('success') else None
    except Exception as e:
        print(f"‚ùå Generate code failed: {e}")
        return None

def test_verify_code(code):
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞"""
    try:
        payload = {"code": code}
        response = requests.post(f"{BASE_URL}/api/auth/verify-code", json=payload)
        print(f"‚úÖ Verify code: {response.status_code}")
        data = response.json()
        print(f"üìÑ Response: {data}")
        return data.get('success', False)
    except Exception as e:
        print(f"‚ùå Verify code failed: {e}")
        return False

def test_invalid_code():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞"""
    try:
        payload = {"code": "000000"}
        response = requests.post(f"{BASE_URL}/api/auth/verify-code", json=payload)
        print(f"‚úÖ Invalid code test: {response.status_code}")
        if response.status_code == 400:
            print("üéØ Correctly rejected invalid code")
            return True
        else:
            print("‚ö†Ô∏è Should have rejected invalid code")
            return False
    except Exception as e:
        print(f"‚ùå Invalid code test failed: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TeleShop Auth Bot API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: Health check
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health endpoint")
    if not test_health():
        print("‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª")
        exit(1)
    
    # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞")
    code = test_generate_code()
    if not code:
        print("‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
        exit(1)
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ–≥–æ –∫–æ–¥–∞
    print(f"\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ–≥–æ –∫–æ–¥–∞: {code}")
    if not test_verify_code(code):
        print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ–≥–æ –∫–æ–¥–∞ –Ω–µ –ø—Ä–æ—à–ª–∞")
        exit(1)
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    print(f"\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞: {code}")
    if test_verify_code(code):
        print("‚ö†Ô∏è –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã–ª –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏")
    else:
        print("üéØ –ö–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞
    print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞")
    test_invalid_code()
    
    print("\n" + "=" * 50)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("üéâ Auth Bot API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!") 